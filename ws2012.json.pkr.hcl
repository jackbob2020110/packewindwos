# This file was autogenerated by the BETA 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/from-1.5/variables#type-constraints for more info.
variable "autounattend" {
  type    = string
  default = "./answer_files/2012_r2/Autounattend.xml"
}

variable "disk_size" {
  type    = string
  default = "204800"
}

variable "disk_type_id" {
  type    = string
  default = "1"
}

variable "headless" {
  type    = string
  default = "true"
}

variable "hyperv_switchname" {
  type    = string
  default = "${env("hyperv_switchname")}"
}

variable "iso_checksum" {
  type    = string
  default = "f18f500fe9f9f08b4857747a6770a6e4"
}

variable "iso_url" {
  type    = string
  default = "d:\\iso\\win2012r2.iso"
}

variable "memory" {
  type    = string
  default = "2048"
}

variable "winrm_timeout" {
  type    = string
  default = "6h"
}

# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/from-1.5/blocks/source
source "hyperv-iso" "autogenerated_1" {
  boot_wait                        = "0m"
  communicator                     = "winrm"
  cpus                             = 2
  disk_size                        = "${var.disk_size}"
  enable_secure_boot               = true
  enable_virtualization_extensions = true
  floppy_files                     = ["${var.autounattend}", "./scripts/disable-screensaver.ps1", "./scripts/enable-winrm.ps1", "./scripts/unattend.xml", "./scripts/sysprep.bat"]
  guest_additions_mode             = "disable"
  iso_checksum                     = "${var.iso_checksum}"
  iso_url                          = "${var.iso_url}"
  memory                           = "${var.memory}"
  shutdown_command                 = "a:/sysprep.bat"
  switch_name                      = "${var.hyperv_switchname}"
  vm_name                          = "windows_2012_r2"
  winrm_password                   = "vagrant"
  winrm_timeout                    = "${var.winrm_timeout}"
  winrm_username                   = "vagrant"
}

source "virtualbox-iso" "autogenerated_2" {
  boot_wait            = "2m"
  communicator         = "winrm"
  cpus                 = 2
  disk_size            = "${var.disk_size}"
  floppy_files         = ["${var.autounattend}", "./scripts/disable-winrm.ps1", "./scripts/enable-winrm.ps1", "./scripts/microsoft-updates.bat", "./scripts/unattend.xml", "./scripts/win-updates.ps1", "./scripts/choco_install.ps1"]
  guest_additions_mode = "disable"
  guest_os_type        = "Windows2012_64"
  headless             = "${var.headless}"
  iso_checksum         = "${var.iso_checksum}"
  iso_url              = "${var.iso_url}"
  memory               = "${var.memory}"
  shutdown_command     = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
  vm_name              = "windows_2012_r2"
  winrm_password       = "vagrant"
  winrm_timeout        = "${var.winrm_timeout}"
  winrm_username       = "vagrant"
}

source "vmware-iso" "autogenerated_3" {
  boot_wait         = "2m"
  communicator      = "winrm"
  cpus              = 2
  disk_adapter_type = "lsisas1068"
  disk_size         = "${var.disk_size}"
  floppy_files      = ["${var.autounattend}", "./scripts/disable-winrm.ps1", "./scripts/enable-winrm.ps1", "./scripts/microsoft-updates.bat", "./scripts/unattend.xml", "./scripts/win-updates.ps1"]
  guest_os_type     = "windows8srv-64"
  headless          = "${var.headless}"
  iso_checksum      = "${var.iso_checksum}"
  iso_url           = "${var.iso_url}"
  memory            = "${var.memory}"
  shutdown_command  = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
  skip_compaction   = true
  vm_name           = "windows_2012_r2"
  vmx_data = {
    "RemoteDisplay.vnc.enabled" = "false"
    "RemoteDisplay.vnc.port"    = "5900"
  }
  vmx_remove_ethernet_interfaces = true
  vnc_port_max                   = 5980
  vnc_port_min                   = 5900
  winrm_password                 = "vagrant"
  winrm_timeout                  = "${var.winrm_timeout}"
  winrm_username                 = "vagrant"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  sources = ["source.hyperv-iso.autogenerated_1", "source.virtualbox-iso.autogenerated_2", "source.vmware-iso.autogenerated_3"]

  provisioner "windows-shell" {
    scripts = ["./scripts/set-winrm-automatic.bat"]
  }
  provisioner "powershell" {
    scripts = ["./scripts/disable-screensaver.ps1", "./scripts/set-powerplan.ps1"]
  }
  provisioner "powershell" {
    scripts = ["./scripts/postInstall.ps1", "./scripts/postSetup.ps1"]
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:47: executing \"hcl2_upgrade\" at <.Provider>: can't evaluate field Provider in type struct { HTTPIP string; HTTPPort string }"
  post-processor "vagrant" {
    keep_input_artifact = false
    output              = "windows_2012r2_base_{{.Provider}}.box"
  }
}
